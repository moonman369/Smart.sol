{
	"id": "6117b1c4c9eb86751aa4717b6c35d59c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Libraries.sol": {
				"content": "pragma solidity ^0.8.0;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\";\r\n\r\n contract Libraries{\r\n    mapping (address => uint) public tokenBalance;\r\n    address public owner;\r\n\r\n    using SafeMath for uint;\r\n\r\n    constructor () public {\r\n        owner = msg.sender;\r\n        tokenBalance[owner] = 1;    \r\n    }\r\n\r\n    function sendToken (address _to, uint _amount) public returns (bool) {\r\n        tokenBalance[msg.sender] = tokenBalance[msg.sender].sub(_amount);\r\n        tokenBalance[_to] += _amount;\r\n\r\n        return true;\r\n    }\r\n }"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Libraries.sol": {
				"Libraries": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "sendToken",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokenBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Libraries.sol\":130:592  contract Libraries{\r... */\n  mstore(0x40, 0x80)\n    /* \"Libraries.sol\":268:365  constructor () public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Libraries.sol\":309:319  msg.sender */\n  caller\n    /* \"Libraries.sol\":301:306  owner */\n  0x01\n  0x00\n    /* \"Libraries.sol\":301:319  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Libraries.sol\":352:353  1 */\n  0x01\n    /* \"Libraries.sol\":330:342  tokenBalance */\n  0x00\n    /* \"Libraries.sol\":330:349  tokenBalance[owner] */\n  dup1\n    /* \"Libraries.sol\":343:348  owner */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Libraries.sol\":330:349  tokenBalance[owner] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"Libraries.sol\":330:353  tokenBalance[owner] = 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Libraries.sol\":130:592  contract Libraries{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Libraries.sol\":130:592  contract Libraries{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x412664ae\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xeedc966a\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Libraries.sol\":373:588  function sendToken (address _to, uint _amount) public returns (bool) {\r... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Libraries.sol\":207:227  address public owner */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Libraries.sol\":155:200  mapping (address => uint) public tokenBalance */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Libraries.sol\":373:588  function sendToken (address _to, uint _amount) public returns (bool) {\r... */\n    tag_9:\n        /* \"Libraries.sol\":436:440  bool */\n      0x00\n        /* \"Libraries.sol\":480:517  tokenBalance[msg.sender].sub(_amount) */\n      tag_23\n        /* \"Libraries.sol\":509:516  _amount */\n      dup3\n        /* \"Libraries.sol\":480:492  tokenBalance */\n      0x00\n        /* \"Libraries.sol\":480:504  tokenBalance[msg.sender] */\n      dup1\n        /* \"Libraries.sol\":493:503  msg.sender */\n      caller\n        /* \"Libraries.sol\":480:504  tokenBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Libraries.sol\":480:508  tokenBalance[msg.sender].sub */\n      tag_24\n      swap1\n        /* \"Libraries.sol\":480:517  tokenBalance[msg.sender].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_23:\n        /* \"Libraries.sol\":453:465  tokenBalance */\n      0x00\n        /* \"Libraries.sol\":453:477  tokenBalance[msg.sender] */\n      dup1\n        /* \"Libraries.sol\":466:476  msg.sender */\n      caller\n        /* \"Libraries.sol\":453:477  tokenBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Libraries.sol\":453:517  tokenBalance[msg.sender] = tokenBalance[msg.sender].sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Libraries.sol\":549:556  _amount */\n      dup2\n        /* \"Libraries.sol\":528:540  tokenBalance */\n      0x00\n        /* \"Libraries.sol\":528:545  tokenBalance[_to] */\n      dup1\n        /* \"Libraries.sol\":541:544  _to */\n      dup6\n        /* \"Libraries.sol\":528:545  tokenBalance[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Libraries.sol\":528:556  tokenBalance[_to] += _amount */\n      dup3\n      dup3\n      sload\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Libraries.sol\":576:580  true */\n      0x01\n        /* \"Libraries.sol\":569:580  return true */\n      swap1\n      pop\n        /* \"Libraries.sol\":373:588  function sendToken (address _to, uint _amount) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Libraries.sol\":207:227  address public owner */\n    tag_13:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Libraries.sol\":155:200  mapping (address => uint) public tokenBalance */\n    tag_19:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":3107:3203  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_24:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":3165:3172  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":3195:3196  b */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":3191:3192  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":3191:3196  a - b */\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":3184:3196  return a - b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":3107:3203  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_31:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_33\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_34\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_35:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_37\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:626   */\n    tag_18:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:492   */\n      iszero\n      tag_40\n      jumpi\n        /* \"#utility.yul\":411:490   */\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":373:492   */\n    tag_40:\n        /* \"#utility.yul\":531:532   */\n      0x00\n        /* \"#utility.yul\":556:609   */\n      tag_43\n        /* \"#utility.yul\":601:608   */\n      dup5\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup6\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_31\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":502:619   */\n      pop\n        /* \"#utility.yul\":297:626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:1106   */\n    tag_8:\n        /* \"#utility.yul\":700:706   */\n      0x00\n        /* \"#utility.yul\":708:714   */\n      dup1\n        /* \"#utility.yul\":757:759   */\n      0x40\n        /* \"#utility.yul\":745:754   */\n      dup4\n        /* \"#utility.yul\":736:743   */\n      dup6\n        /* \"#utility.yul\":732:755   */\n      sub\n        /* \"#utility.yul\":728:760   */\n      slt\n        /* \"#utility.yul\":725:844   */\n      iszero\n      tag_45\n      jumpi\n        /* \"#utility.yul\":763:842   */\n      tag_46\n      tag_42\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":725:844   */\n    tag_45:\n        /* \"#utility.yul\":883:884   */\n      0x00\n        /* \"#utility.yul\":908:961   */\n      tag_47\n        /* \"#utility.yul\":953:960   */\n      dup6\n        /* \"#utility.yul\":944:950   */\n      dup3\n        /* \"#utility.yul\":933:942   */\n      dup7\n        /* \"#utility.yul\":929:951   */\n      add\n        /* \"#utility.yul\":908:961   */\n      tag_31\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":898:961   */\n      swap3\n      pop\n        /* \"#utility.yul\":854:971   */\n      pop\n        /* \"#utility.yul\":1010:1012   */\n      0x20\n        /* \"#utility.yul\":1036:1089   */\n      tag_48\n        /* \"#utility.yul\":1081:1088   */\n      dup6\n        /* \"#utility.yul\":1072:1078   */\n      dup3\n        /* \"#utility.yul\":1061:1070   */\n      dup7\n        /* \"#utility.yul\":1057:1079   */\n      add\n        /* \"#utility.yul\":1036:1089   */\n      tag_35\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1026:1089   */\n      swap2\n      pop\n        /* \"#utility.yul\":981:1099   */\n      pop\n        /* \"#utility.yul\":632:1106   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1112:1230   */\n    tag_49:\n        /* \"#utility.yul\":1199:1223   */\n      tag_51\n        /* \"#utility.yul\":1217:1222   */\n      dup2\n        /* \"#utility.yul\":1199:1223   */\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1194:1197   */\n      dup3\n        /* \"#utility.yul\":1187:1224   */\n      mstore\n        /* \"#utility.yul\":1112:1230   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1236:1345   */\n    tag_53:\n        /* \"#utility.yul\":1317:1338   */\n      tag_55\n        /* \"#utility.yul\":1332:1337   */\n      dup2\n        /* \"#utility.yul\":1317:1338   */\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1312:1315   */\n      dup3\n        /* \"#utility.yul\":1305:1339   */\n      mstore\n        /* \"#utility.yul\":1236:1345   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1351:1469   */\n    tag_57:\n        /* \"#utility.yul\":1438:1462   */\n      tag_59\n        /* \"#utility.yul\":1456:1461   */\n      dup2\n        /* \"#utility.yul\":1438:1462   */\n      tag_60\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1433:1436   */\n      dup3\n        /* \"#utility.yul\":1426:1463   */\n      mstore\n        /* \"#utility.yul\":1351:1469   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1475:1697   */\n    tag_15:\n        /* \"#utility.yul\":1568:1572   */\n      0x00\n        /* \"#utility.yul\":1606:1608   */\n      0x20\n        /* \"#utility.yul\":1595:1604   */\n      dup3\n        /* \"#utility.yul\":1591:1609   */\n      add\n        /* \"#utility.yul\":1583:1609   */\n      swap1\n      pop\n        /* \"#utility.yul\":1619:1690   */\n      tag_62\n        /* \"#utility.yul\":1687:1688   */\n      0x00\n        /* \"#utility.yul\":1676:1685   */\n      dup4\n        /* \"#utility.yul\":1672:1689   */\n      add\n        /* \"#utility.yul\":1663:1669   */\n      dup5\n        /* \"#utility.yul\":1619:1690   */\n      tag_49\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1475:1697   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1703:1913   */\n    tag_11:\n        /* \"#utility.yul\":1790:1794   */\n      0x00\n        /* \"#utility.yul\":1828:1830   */\n      0x20\n        /* \"#utility.yul\":1817:1826   */\n      dup3\n        /* \"#utility.yul\":1813:1831   */\n      add\n        /* \"#utility.yul\":1805:1831   */\n      swap1\n      pop\n        /* \"#utility.yul\":1841:1906   */\n      tag_64\n        /* \"#utility.yul\":1903:1904   */\n      0x00\n        /* \"#utility.yul\":1892:1901   */\n      dup4\n        /* \"#utility.yul\":1888:1905   */\n      add\n        /* \"#utility.yul\":1879:1885   */\n      dup5\n        /* \"#utility.yul\":1841:1906   */\n      tag_53\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1703:1913   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1919:2141   */\n    tag_21:\n        /* \"#utility.yul\":2012:2016   */\n      0x00\n        /* \"#utility.yul\":2050:2052   */\n      0x20\n        /* \"#utility.yul\":2039:2048   */\n      dup3\n        /* \"#utility.yul\":2035:2053   */\n      add\n        /* \"#utility.yul\":2027:2053   */\n      swap1\n      pop\n        /* \"#utility.yul\":2063:2134   */\n      tag_66\n        /* \"#utility.yul\":2131:2132   */\n      0x00\n        /* \"#utility.yul\":2120:2129   */\n      dup4\n        /* \"#utility.yul\":2116:2133   */\n      add\n        /* \"#utility.yul\":2107:2113   */\n      dup5\n        /* \"#utility.yul\":2063:2134   */\n      tag_57\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1919:2141   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2228:2533   */\n    tag_26:\n        /* \"#utility.yul\":2268:2271   */\n      0x00\n        /* \"#utility.yul\":2287:2307   */\n      tag_70\n        /* \"#utility.yul\":2305:2306   */\n      dup3\n        /* \"#utility.yul\":2287:2307   */\n      tag_60\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":2282:2307   */\n      swap2\n      pop\n        /* \"#utility.yul\":2321:2341   */\n      tag_71\n        /* \"#utility.yul\":2339:2340   */\n      dup4\n        /* \"#utility.yul\":2321:2341   */\n      tag_60\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2316:2341   */\n      swap3\n      pop\n        /* \"#utility.yul\":2475:2476   */\n      dup3\n        /* \"#utility.yul\":2407:2473   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2403:2477   */\n      sub\n        /* \"#utility.yul\":2400:2401   */\n      dup3\n        /* \"#utility.yul\":2397:2478   */\n      gt\n        /* \"#utility.yul\":2394:2501   */\n      iszero\n      tag_72\n      jumpi\n        /* \"#utility.yul\":2481:2499   */\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2394:2501   */\n    tag_72:\n        /* \"#utility.yul\":2525:2526   */\n      dup3\n        /* \"#utility.yul\":2522:2523   */\n      dup3\n        /* \"#utility.yul\":2518:2527   */\n      add\n        /* \"#utility.yul\":2511:2527   */\n      swap1\n      pop\n        /* \"#utility.yul\":2228:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:2730   */\n    tag_29:\n        /* \"#utility.yul\":2579:2583   */\n      0x00\n        /* \"#utility.yul\":2599:2619   */\n      tag_76\n        /* \"#utility.yul\":2617:2618   */\n      dup3\n        /* \"#utility.yul\":2599:2619   */\n      tag_60\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2594:2619   */\n      swap2\n      pop\n        /* \"#utility.yul\":2633:2653   */\n      tag_77\n        /* \"#utility.yul\":2651:2652   */\n      dup4\n        /* \"#utility.yul\":2633:2653   */\n      tag_60\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2628:2653   */\n      swap3\n      pop\n        /* \"#utility.yul\":2672:2673   */\n      dup3\n        /* \"#utility.yul\":2669:2670   */\n      dup3\n        /* \"#utility.yul\":2666:2674   */\n      lt\n        /* \"#utility.yul\":2663:2697   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":2677:2695   */\n      tag_79\n      tag_74\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2663:2697   */\n    tag_78:\n        /* \"#utility.yul\":2722:2723   */\n      dup3\n        /* \"#utility.yul\":2719:2720   */\n      dup3\n        /* \"#utility.yul\":2715:2724   */\n      sub\n        /* \"#utility.yul\":2707:2724   */\n      swap1\n      pop\n        /* \"#utility.yul\":2539:2730   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2736:2832   */\n    tag_52:\n        /* \"#utility.yul\":2773:2780   */\n      0x00\n        /* \"#utility.yul\":2802:2826   */\n      tag_81\n        /* \"#utility.yul\":2820:2825   */\n      dup3\n        /* \"#utility.yul\":2802:2826   */\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2791:2826   */\n      swap1\n      pop\n        /* \"#utility.yul\":2736:2832   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2838:2928   */\n    tag_56:\n        /* \"#utility.yul\":2872:2879   */\n      0x00\n        /* \"#utility.yul\":2915:2920   */\n      dup2\n        /* \"#utility.yul\":2908:2921   */\n      iszero\n        /* \"#utility.yul\":2901:2922   */\n      iszero\n        /* \"#utility.yul\":2890:2922   */\n      swap1\n      pop\n        /* \"#utility.yul\":2838:2928   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2934:3060   */\n    tag_82:\n        /* \"#utility.yul\":2971:2978   */\n      0x00\n        /* \"#utility.yul\":3011:3053   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3004:3009   */\n      dup3\n        /* \"#utility.yul\":3000:3054   */\n      and\n        /* \"#utility.yul\":2989:3054   */\n      swap1\n      pop\n        /* \"#utility.yul\":2934:3060   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3066:3143   */\n    tag_60:\n        /* \"#utility.yul\":3103:3110   */\n      0x00\n        /* \"#utility.yul\":3132:3137   */\n      dup2\n        /* \"#utility.yul\":3121:3137   */\n      swap1\n      pop\n        /* \"#utility.yul\":3066:3143   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3149:3329   */\n    tag_74:\n        /* \"#utility.yul\":3197:3274   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3194:3195   */\n      0x00\n        /* \"#utility.yul\":3187:3275   */\n      mstore\n        /* \"#utility.yul\":3294:3298   */\n      0x11\n        /* \"#utility.yul\":3291:3292   */\n      0x04\n        /* \"#utility.yul\":3284:3299   */\n      mstore\n        /* \"#utility.yul\":3318:3322   */\n      0x24\n        /* \"#utility.yul\":3315:3316   */\n      0x00\n        /* \"#utility.yul\":3308:3323   */\n      revert\n        /* \"#utility.yul\":3458:3575   */\n    tag_42:\n        /* \"#utility.yul\":3567:3568   */\n      0x00\n        /* \"#utility.yul\":3564:3565   */\n      dup1\n        /* \"#utility.yul\":3557:3569   */\n      revert\n        /* \"#utility.yul\":3581:3703   */\n    tag_34:\n        /* \"#utility.yul\":3654:3678   */\n      tag_91\n        /* \"#utility.yul\":3672:3677   */\n      dup2\n        /* \"#utility.yul\":3654:3678   */\n      tag_52\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":3647:3652   */\n      dup2\n        /* \"#utility.yul\":3644:3679   */\n      eq\n        /* \"#utility.yul\":3634:3697   */\n      tag_92\n      jumpi\n        /* \"#utility.yul\":3693:3694   */\n      0x00\n        /* \"#utility.yul\":3690:3691   */\n      dup1\n        /* \"#utility.yul\":3683:3695   */\n      revert\n        /* \"#utility.yul\":3634:3697   */\n    tag_92:\n        /* \"#utility.yul\":3581:3703   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3709:3831   */\n    tag_38:\n        /* \"#utility.yul\":3782:3806   */\n      tag_94\n        /* \"#utility.yul\":3800:3805   */\n      dup2\n        /* \"#utility.yul\":3782:3806   */\n      tag_60\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":3775:3780   */\n      dup2\n        /* \"#utility.yul\":3772:3807   */\n      eq\n        /* \"#utility.yul\":3762:3825   */\n      tag_95\n      jumpi\n        /* \"#utility.yul\":3821:3822   */\n      0x00\n        /* \"#utility.yul\":3818:3819   */\n      dup1\n        /* \"#utility.yul\":3811:3823   */\n      revert\n        /* \"#utility.yul\":3762:3825   */\n    tag_95:\n        /* \"#utility.yul\":3709:3831   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202adf15b76efcb6dc7861faf08dddce1431c1308d3b62f040ee514e1382047aef64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_26": {
									"entryPoint": null,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061048b806100c76000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063412664ae146100465780638da5cb5b14610076578063eedc966a14610094575b600080fd5b610060600480360381019061005b9190610263565b6100c4565b60405161006d91906102eb565b60405180910390f35b61007e6101b8565b60405161008b91906102d0565b60405180910390f35b6100ae60048036038101906100a99190610236565b6101de565b6040516100bb9190610306565b60405180910390f35b6000610117826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546101f690919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101a79190610321565b925050819055506001905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b600081836102049190610377565b905092915050565b60008135905061021b81610427565b92915050565b6000813590506102308161043e565b92915050565b60006020828403121561024c5761024b610422565b5b600061025a8482850161020c565b91505092915050565b6000806040838503121561027a57610279610422565b5b60006102888582860161020c565b925050602061029985828601610221565b9150509250929050565b6102ac816103ab565b82525050565b6102bb816103bd565b82525050565b6102ca816103e9565b82525050565b60006020820190506102e560008301846102a3565b92915050565b600060208201905061030060008301846102b2565b92915050565b600060208201905061031b60008301846102c1565b92915050565b600061032c826103e9565b9150610337836103e9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561036c5761036b6103f3565b5b828201905092915050565b6000610382826103e9565b915061038d836103e9565b9250828210156103a05761039f6103f3565b5b828203905092915050565b60006103b6826103c9565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b610430816103ab565b811461043b57600080fd5b50565b610447816103e9565b811461045257600080fd5b5056fea26469706673582212202adf15b76efcb6dc7861faf08dddce1431c1308d3b62f040ee514e1382047aef64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x48B DUP1 PUSH2 0xC7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x412664AE EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xEEDC966A EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x263 JUMP JUMPDEST PUSH2 0xC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x2EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x1B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x236 JUMP JUMPDEST PUSH2 0x1DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x306 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x117 DUP3 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1F6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x321 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x377 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21B DUP2 PUSH2 0x427 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x230 DUP2 PUSH2 0x43E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24C JUMPI PUSH2 0x24B PUSH2 0x422 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25A DUP5 DUP3 DUP6 ADD PUSH2 0x20C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27A JUMPI PUSH2 0x279 PUSH2 0x422 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x288 DUP6 DUP3 DUP7 ADD PUSH2 0x20C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x299 DUP6 DUP3 DUP7 ADD PUSH2 0x221 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AC DUP2 PUSH2 0x3AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2BB DUP2 PUSH2 0x3BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2CA DUP2 PUSH2 0x3E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x300 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x31B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32C DUP3 PUSH2 0x3E9 JUMP JUMPDEST SWAP2 POP PUSH2 0x337 DUP4 PUSH2 0x3E9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x36C JUMPI PUSH2 0x36B PUSH2 0x3F3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x382 DUP3 PUSH2 0x3E9 JUMP JUMPDEST SWAP2 POP PUSH2 0x38D DUP4 PUSH2 0x3E9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x3A0 JUMPI PUSH2 0x39F PUSH2 0x3F3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B6 DUP3 PUSH2 0x3C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x430 DUP2 PUSH2 0x3AB JUMP JUMPDEST DUP2 EQ PUSH2 0x43B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x447 DUP2 PUSH2 0x3E9 JUMP JUMPDEST DUP2 EQ PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0xDF ISZERO 0xB7 PUSH15 0xFCB6DC7861FAF08DDDCE1431C1308D EXTCODESIZE PUSH3 0xF040EE MLOAD 0x4E SGT DUP3 DIV PUSH27 0xEF64736F6C63430008070033000000000000000000000000000000 ",
							"sourceMap": "130:462:0:-:0;;;268:97;;;;;;;;;;309:10;301:5;;:18;;;;;;;;;;;;;;;;;;352:1;330:12;:19;343:5;;;;;;;;;;;330:19;;;;;;;;;;;;;;;:23;;;;130:462;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@owner_8": {
									"entryPoint": 440,
									"id": 8,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sendToken_57": {
									"entryPoint": 196,
									"id": 57,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_249": {
									"entryPoint": 502,
									"id": 249,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tokenBalance_6": {
									"entryPoint": 478,
									"id": 6,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 939,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1011,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1058,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1086,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3834:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:2",
														"type": ""
													}
												],
												"src": "152:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "411:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:2"
															},
															"nodeType": "YulIf",
															"src": "373:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "502:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "517:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "521:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:2",
														"type": ""
													}
												],
												"src": "297:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "715:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "761:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "763:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "763:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "763:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "736:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "745:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "732:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "757:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "728:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:32:2"
															},
															"nodeType": "YulIf",
															"src": "725:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "854:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "869:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "883:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "873:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "898:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "933:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "944:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "929:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "929:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "953:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "908:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "908:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "898:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "981:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "996:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1010:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1000:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1026:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1061:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1072:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1057:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1057:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1081:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1036:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1026:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "677:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "688:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "700:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "708:6:2",
														"type": ""
													}
												],
												"src": "632:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1177:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1194:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1217:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1199:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1199:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1187:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1187:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1165:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1172:3:2",
														"type": ""
													}
												],
												"src": "1112:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1295:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1312:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1332:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1317:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1317:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1305:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1305:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1305:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1283:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1290:3:2",
														"type": ""
													}
												],
												"src": "1236:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1416:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1433:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1456:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1438:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1438:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1426:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1426:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1426:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1404:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1411:3:2",
														"type": ""
													}
												],
												"src": "1351:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1573:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1583:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1595:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1606:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1591:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1591:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1583:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1663:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1676:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1687:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1672:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1672:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1619:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1619:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1619:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1545:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1557:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1568:4:2",
														"type": ""
													}
												],
												"src": "1475:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1795:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1805:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1817:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1828:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1813:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1813:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1805:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1879:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1892:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1903:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1888:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1888:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1841:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1841:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1767:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1779:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1790:4:2",
														"type": ""
													}
												],
												"src": "1703:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2017:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2027:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2039:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2035:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2035:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2027:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2107:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2120:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2131:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2116:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2116:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2063:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2063:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2063:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1989:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2001:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2012:4:2",
														"type": ""
													}
												],
												"src": "1919:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2187:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2197:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2213:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2207:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2207:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2197:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2180:6:2",
														"type": ""
													}
												],
												"src": "2147:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2272:261:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2282:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2305:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2287:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2287:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2282:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2316:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2339:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2321:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2321:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2316:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2479:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2481:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2481:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2481:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2400:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2407:66:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2475:1:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2403:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2403:74:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2397:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2397:81:2"
															},
															"nodeType": "YulIf",
															"src": "2394:107:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2511:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2522:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2525:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2518:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2518:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2511:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2259:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2262:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2268:3:2",
														"type": ""
													}
												],
												"src": "2228:305:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2584:146:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2594:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2617:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2599:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2599:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2594:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2628:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2651:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2633:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2633:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2628:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2675:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2677:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2677:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2669:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2672:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2666:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2666:8:2"
															},
															"nodeType": "YulIf",
															"src": "2663:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2707:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2719:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2722:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2715:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2715:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2707:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2570:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2573:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2579:4:2",
														"type": ""
													}
												],
												"src": "2539:191:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2781:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2791:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2820:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2802:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2802:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2791:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2763:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2773:7:2",
														"type": ""
													}
												],
												"src": "2736:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2880:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2890:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2915:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2908:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2908:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2901:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2901:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2890:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2862:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2872:7:2",
														"type": ""
													}
												],
												"src": "2838:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2979:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2989:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3004:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3011:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3000:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3000:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2989:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2961:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2971:7:2",
														"type": ""
													}
												],
												"src": "2934:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3111:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3121:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3132:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3121:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3093:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3103:7:2",
														"type": ""
													}
												],
												"src": "3066:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3177:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3197:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3187:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3187:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3291:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3294:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3284:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3284:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3284:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3315:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3318:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3308:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3308:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3308:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3149:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3424:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3441:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3444:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3434:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3434:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3434:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3335:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3547:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3564:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3567:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3557:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3557:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3557:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3458:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3624:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3681:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3690:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3693:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3683:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3683:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3683:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3647:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3672:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3654:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3654:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3644:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3644:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3637:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3637:43:2"
															},
															"nodeType": "YulIf",
															"src": "3634:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3617:5:2",
														"type": ""
													}
												],
												"src": "3581:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3752:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3809:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3818:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3821:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3811:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3811:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3811:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3775:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3800:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3782:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3782:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3772:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3772:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3765:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3765:43:2"
															},
															"nodeType": "YulIf",
															"src": "3762:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3745:5:2",
														"type": ""
													}
												],
												"src": "3709:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063412664ae146100465780638da5cb5b14610076578063eedc966a14610094575b600080fd5b610060600480360381019061005b9190610263565b6100c4565b60405161006d91906102eb565b60405180910390f35b61007e6101b8565b60405161008b91906102d0565b60405180910390f35b6100ae60048036038101906100a99190610236565b6101de565b6040516100bb9190610306565b60405180910390f35b6000610117826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546101f690919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101a79190610321565b925050819055506001905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b600081836102049190610377565b905092915050565b60008135905061021b81610427565b92915050565b6000813590506102308161043e565b92915050565b60006020828403121561024c5761024b610422565b5b600061025a8482850161020c565b91505092915050565b6000806040838503121561027a57610279610422565b5b60006102888582860161020c565b925050602061029985828601610221565b9150509250929050565b6102ac816103ab565b82525050565b6102bb816103bd565b82525050565b6102ca816103e9565b82525050565b60006020820190506102e560008301846102a3565b92915050565b600060208201905061030060008301846102b2565b92915050565b600060208201905061031b60008301846102c1565b92915050565b600061032c826103e9565b9150610337836103e9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561036c5761036b6103f3565b5b828201905092915050565b6000610382826103e9565b915061038d836103e9565b9250828210156103a05761039f6103f3565b5b828203905092915050565b60006103b6826103c9565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b610430816103ab565b811461043b57600080fd5b50565b610447816103e9565b811461045257600080fd5b5056fea26469706673582212202adf15b76efcb6dc7861faf08dddce1431c1308d3b62f040ee514e1382047aef64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x412664AE EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xEEDC966A EQ PUSH2 0x94 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x263 JUMP JUMPDEST PUSH2 0xC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x2EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E PUSH2 0x1B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x236 JUMP JUMPDEST PUSH2 0x1DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x306 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x117 DUP3 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1F6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x321 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x377 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21B DUP2 PUSH2 0x427 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x230 DUP2 PUSH2 0x43E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24C JUMPI PUSH2 0x24B PUSH2 0x422 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x25A DUP5 DUP3 DUP6 ADD PUSH2 0x20C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27A JUMPI PUSH2 0x279 PUSH2 0x422 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x288 DUP6 DUP3 DUP7 ADD PUSH2 0x20C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x299 DUP6 DUP3 DUP7 ADD PUSH2 0x221 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AC DUP2 PUSH2 0x3AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2BB DUP2 PUSH2 0x3BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2CA DUP2 PUSH2 0x3E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2E5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x300 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x31B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32C DUP3 PUSH2 0x3E9 JUMP JUMPDEST SWAP2 POP PUSH2 0x337 DUP4 PUSH2 0x3E9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x36C JUMPI PUSH2 0x36B PUSH2 0x3F3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x382 DUP3 PUSH2 0x3E9 JUMP JUMPDEST SWAP2 POP PUSH2 0x38D DUP4 PUSH2 0x3E9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x3A0 JUMPI PUSH2 0x39F PUSH2 0x3F3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B6 DUP3 PUSH2 0x3C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x430 DUP2 PUSH2 0x3AB JUMP JUMPDEST DUP2 EQ PUSH2 0x43B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x447 DUP2 PUSH2 0x3E9 JUMP JUMPDEST DUP2 EQ PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0xDF ISZERO 0xB7 PUSH15 0xFCB6DC7861FAF08DDDCE1431C1308D EXTCODESIZE PUSH3 0xF040EE MLOAD 0x4E SGT DUP3 DIV PUSH27 0xEF64736F6C63430008070033000000000000000000000000000000 ",
							"sourceMap": "130:462:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;373:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;207:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;155:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;373:215;436:4;480:37;509:7;480:12;:24;493:10;480:24;;;;;;;;;;;;;;;;:28;;:37;;;;:::i;:::-;453:12;:24;466:10;453:24;;;;;;;;;;;;;;;:64;;;;549:7;528:12;:17;541:3;528:17;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;576:4;569:11;;373:215;;;;:::o;207:20::-;;;;;;;;;;;;;:::o;155:45::-;;;;;;;;;;;;;;;;;:::o;3107:96:1:-;3165:7;3195:1;3191;:5;;;;:::i;:::-;3184:12;;3107:96;;;;:::o;7:139:2:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:119;;;411:79;;:::i;:::-;373:119;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;297:329;;;;:::o;632:474::-;700:6;708;757:2;745:9;736:7;732:23;728:32;725:119;;;763:79;;:::i;:::-;725:119;883:1;908:53;953:7;944:6;933:9;929:22;908:53;:::i;:::-;898:63;;854:117;1010:2;1036:53;1081:7;1072:6;1061:9;1057:22;1036:53;:::i;:::-;1026:63;;981:118;632:474;;;;;:::o;1112:118::-;1199:24;1217:5;1199:24;:::i;:::-;1194:3;1187:37;1112:118;;:::o;1236:109::-;1317:21;1332:5;1317:21;:::i;:::-;1312:3;1305:34;1236:109;;:::o;1351:118::-;1438:24;1456:5;1438:24;:::i;:::-;1433:3;1426:37;1351:118;;:::o;1475:222::-;1568:4;1606:2;1595:9;1591:18;1583:26;;1619:71;1687:1;1676:9;1672:17;1663:6;1619:71;:::i;:::-;1475:222;;;;:::o;1703:210::-;1790:4;1828:2;1817:9;1813:18;1805:26;;1841:65;1903:1;1892:9;1888:17;1879:6;1841:65;:::i;:::-;1703:210;;;;:::o;1919:222::-;2012:4;2050:2;2039:9;2035:18;2027:26;;2063:71;2131:1;2120:9;2116:17;2107:6;2063:71;:::i;:::-;1919:222;;;;:::o;2228:305::-;2268:3;2287:20;2305:1;2287:20;:::i;:::-;2282:25;;2321:20;2339:1;2321:20;:::i;:::-;2316:25;;2475:1;2407:66;2403:74;2400:1;2397:81;2394:107;;;2481:18;;:::i;:::-;2394:107;2525:1;2522;2518:9;2511:16;;2228:305;;;;:::o;2539:191::-;2579:4;2599:20;2617:1;2599:20;:::i;:::-;2594:25;;2633:20;2651:1;2633:20;:::i;:::-;2628:25;;2672:1;2669;2666:8;2663:34;;;2677:18;;:::i;:::-;2663:34;2722:1;2719;2715:9;2707:17;;2539:191;;;;:::o;2736:96::-;2773:7;2802:24;2820:5;2802:24;:::i;:::-;2791:35;;2736:96;;;:::o;2838:90::-;2872:7;2915:5;2908:13;2901:21;2890:32;;2838:90;;;:::o;2934:126::-;2971:7;3011:42;3004:5;3000:54;2989:65;;2934:126;;;:::o;3066:77::-;3103:7;3132:5;3121:16;;3066:77;;;:::o;3149:180::-;3197:77;3194:1;3187:88;3294:4;3291:1;3284:15;3318:4;3315:1;3308:15;3458:117;3567:1;3564;3557:12;3581:122;3654:24;3672:5;3654:24;:::i;:::-;3647:5;3644:35;3634:63;;3693:1;3690;3683:12;3634:63;3581:122;:::o;3709:::-;3782:24;3800:5;3782:24;:::i;:::-;3775:5;3772:35;3762:63;;3821:1;3818;3811:12;3762:63;3709:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "232600",
								"executionCost": "48881",
								"totalCost": "281481"
							},
							"external": {
								"owner()": "2514",
								"sendToken(address,uint256)": "infinite",
								"tokenBalance(address)": "2836"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 130,
									"end": 592,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 130,
									"end": 592,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 130,
									"end": 592,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 268,
									"end": 365,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 268,
									"end": 365,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 268,
									"end": 365,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 268,
									"end": 365,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 268,
									"end": 365,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 268,
									"end": 365,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 365,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 268,
									"end": 365,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 268,
									"end": 365,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 268,
									"end": 365,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 268,
									"end": 365,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 309,
									"end": 319,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 301,
									"end": 306,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 301,
									"end": 306,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 319,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 301,
									"end": 319,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 301,
									"end": 319,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 301,
									"end": 319,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 301,
									"end": 319,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 301,
									"end": 319,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 301,
									"end": 319,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 301,
									"end": 319,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 301,
									"end": 319,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 301,
									"end": 319,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 301,
									"end": 319,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 301,
									"end": 319,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 301,
									"end": 319,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 301,
									"end": 319,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 301,
									"end": 319,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 301,
									"end": 319,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 301,
									"end": 319,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 301,
									"end": 319,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 330,
									"end": 342,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 330,
									"end": 349,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 343,
									"end": 348,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 343,
									"end": 348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 343,
									"end": 348,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 343,
									"end": 348,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 343,
									"end": 348,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 343,
									"end": 348,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 343,
									"end": 348,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 343,
									"end": 348,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 343,
									"end": 348,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 343,
									"end": 348,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 343,
									"end": 348,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 330,
									"end": 349,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 330,
									"end": 349,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 330,
									"end": 349,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 330,
									"end": 349,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 330,
									"end": 349,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 330,
									"end": 349,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 330,
									"end": 349,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 330,
									"end": 349,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 330,
									"end": 349,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 330,
									"end": 349,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 330,
									"end": 349,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 330,
									"end": 349,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 330,
									"end": 349,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 330,
									"end": 349,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 330,
									"end": 349,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 330,
									"end": 353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 330,
									"end": 353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 330,
									"end": 353,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 330,
									"end": 353,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 130,
									"end": 592,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 592,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 130,
									"end": 592,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 592,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 592,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 130,
									"end": 592,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 592,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202adf15b76efcb6dc7861faf08dddce1431c1308d3b62f040ee514e1382047aef64736f6c63430008070033",
									".code": [
										{
											"begin": 130,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 130,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 130,
											"end": 592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 130,
											"end": 592,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 130,
											"end": 592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 592,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 130,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 130,
											"end": 592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 130,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 130,
											"end": 592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 592,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 130,
											"end": 592,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 130,
											"end": 592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 130,
											"end": 592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 130,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 130,
											"end": 592,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 130,
											"end": 592,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 130,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 130,
											"end": 592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 130,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 130,
											"end": 592,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 130,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 130,
											"end": 592,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 130,
											"end": 592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "412664AE"
										},
										{
											"begin": 130,
											"end": 592,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 130,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 130,
											"end": 592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 130,
											"end": 592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 130,
											"end": 592,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 130,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 130,
											"end": 592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 130,
											"end": 592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "EEDC966A"
										},
										{
											"begin": 130,
											"end": 592,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 130,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 130,
											"end": 592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 130,
											"end": 592,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 130,
											"end": 592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 130,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 130,
											"end": 592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 592,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 373,
											"end": 588,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 373,
											"end": 588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 373,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 373,
											"end": 588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 373,
											"end": 588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 588,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 373,
											"end": 588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 373,
											"end": 588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 373,
											"end": 588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 373,
											"end": 588,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 373,
											"end": 588,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 373,
											"end": 588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 373,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 373,
											"end": 588,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 373,
											"end": 588,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 373,
											"end": 588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 373,
											"end": 588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 373,
											"end": 588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 373,
											"end": 588,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 373,
											"end": 588,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 373,
											"end": 588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 373,
											"end": 588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 373,
											"end": 588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 588,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 207,
											"end": 227,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 207,
											"end": 227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 207,
											"end": 227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 207,
											"end": 227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 207,
											"end": 227,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 207,
											"end": 227,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 207,
											"end": 227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 207,
											"end": 227,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 207,
											"end": 227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 207,
											"end": 227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 207,
											"end": 227,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 207,
											"end": 227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 207,
											"end": 227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 207,
											"end": 227,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 207,
											"end": 227,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 207,
											"end": 227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 207,
											"end": 227,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 207,
											"end": 227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 207,
											"end": 227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 207,
											"end": 227,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 207,
											"end": 227,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 207,
											"end": 227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 207,
											"end": 227,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 155,
											"end": 200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 155,
											"end": 200,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 155,
											"end": 200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 155,
											"end": 200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 155,
											"end": 200,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 155,
											"end": 200,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 155,
											"end": 200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 155,
											"end": 200,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 155,
											"end": 200,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 155,
											"end": 200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 155,
											"end": 200,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 155,
											"end": 200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 155,
											"end": 200,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 155,
											"end": 200,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 155,
											"end": 200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 155,
											"end": 200,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 373,
											"end": 588,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 373,
											"end": 588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 436,
											"end": 440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 509,
											"end": 516,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 480,
											"end": 492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 493,
											"end": 503,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 480,
											"end": 504,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 480,
											"end": 504,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 480,
											"end": 504,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 480,
											"end": 504,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 480,
											"end": 504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 480,
											"end": 504,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 480,
											"end": 504,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 480,
											"end": 504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 480,
											"end": 504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 480,
											"end": 504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 480,
											"end": 504,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 480,
											"end": 504,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 480,
											"end": 504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 480,
											"end": 504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 504,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 480,
											"end": 504,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 480,
											"end": 508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 480,
											"end": 508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 480,
											"end": 517,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 480,
											"end": 517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 480,
											"end": 517,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 480,
											"end": 517,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 480,
											"end": 517,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 480,
											"end": 517,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 480,
											"end": 517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 453,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 453,
											"end": 477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 466,
											"end": 476,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 453,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 453,
											"end": 477,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 453,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 453,
											"end": 477,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 453,
											"end": 477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 453,
											"end": 477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 453,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 453,
											"end": 477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 453,
											"end": 477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 453,
											"end": 477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 453,
											"end": 477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 453,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 453,
											"end": 477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 453,
											"end": 477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 453,
											"end": 477,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 453,
											"end": 517,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 453,
											"end": 517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 453,
											"end": 517,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 453,
											"end": 517,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 549,
											"end": 556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 528,
											"end": 540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 541,
											"end": 544,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 528,
											"end": 545,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 545,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 528,
											"end": 545,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 545,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 528,
											"end": 545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 528,
											"end": 545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 528,
											"end": 545,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 545,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 528,
											"end": 545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 528,
											"end": 545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 528,
											"end": 545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 528,
											"end": 545,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 528,
											"end": 545,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 528,
											"end": 545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 545,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 528,
											"end": 545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 556,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 528,
											"end": 556,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 528,
											"end": 556,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 528,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 528,
											"end": 556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 528,
											"end": 556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 528,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 528,
											"end": 556,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 528,
											"end": 556,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 528,
											"end": 556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 528,
											"end": 556,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 528,
											"end": 556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 528,
											"end": 556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 528,
											"end": 556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 528,
											"end": 556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 528,
											"end": 556,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 528,
											"end": 556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 576,
											"end": 580,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 569,
											"end": 580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 569,
											"end": 580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 373,
											"end": 588,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 373,
											"end": 588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 373,
											"end": 588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 373,
											"end": 588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 373,
											"end": 588,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 207,
											"end": 227,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 207,
											"end": 227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 207,
											"end": 227,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 207,
											"end": 227,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 207,
											"end": 227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 207,
											"end": 227,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 207,
											"end": 227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 207,
											"end": 227,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 207,
											"end": 227,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 207,
											"end": 227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 207,
											"end": 227,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 207,
											"end": 227,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 207,
											"end": 227,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 207,
											"end": 227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 207,
											"end": 227,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 155,
											"end": 200,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 155,
											"end": 200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 200,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 155,
											"end": 200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 155,
											"end": 200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 200,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 155,
											"end": 200,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3107,
											"end": 3203,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3107,
											"end": 3203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3196,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3192,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3191,
											"end": 3196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3196,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3191,
											"end": 3196,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3191,
											"end": 3196,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3191,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3184,
											"end": 3196,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3184,
											"end": 3196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3107,
											"end": 3203,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3107,
											"end": 3203,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3107,
											"end": 3203,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3107,
											"end": 3203,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3107,
											"end": 3203,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 373,
											"end": 492,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 373,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 373,
											"end": 492,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 531,
											"end": 532,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 502,
											"end": 619,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 757,
											"end": 759,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 754,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 736,
											"end": 743,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 732,
											"end": 755,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 728,
											"end": 760,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 725,
											"end": 844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 725,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 725,
											"end": 844,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 883,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 953,
											"end": 960,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 933,
											"end": 942,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 898,
											"end": 961,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 898,
											"end": 961,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 854,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1012,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1081,
											"end": 1088,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1079,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1112,
											"end": 1230,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1112,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1199,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1217,
											"end": 1222,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1199,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1199,
											"end": 1223,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1199,
											"end": 1223,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1199,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1194,
											"end": 1197,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1230,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1236,
											"end": 1345,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1236,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1332,
											"end": 1337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1317,
											"end": 1338,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1317,
											"end": 1338,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1317,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1312,
											"end": 1315,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1339,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1345,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1351,
											"end": 1469,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1351,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1438,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1456,
											"end": 1461,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1438,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1438,
											"end": 1462,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1438,
											"end": 1462,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1438,
											"end": 1462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1436,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1426,
											"end": 1463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1469,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1469,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1469,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1475,
											"end": 1697,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1475,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1568,
											"end": 1572,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1606,
											"end": 1608,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1595,
											"end": 1604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1591,
											"end": 1609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1619,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1687,
											"end": 1688,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1676,
											"end": 1685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1672,
											"end": 1689,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1669,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1619,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1619,
											"end": 1690,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1619,
											"end": 1690,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1619,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1697,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1697,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1697,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1697,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1697,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1703,
											"end": 1913,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1703,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1790,
											"end": 1794,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1828,
											"end": 1830,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1817,
											"end": 1826,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1831,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1903,
											"end": 1904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1901,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1888,
											"end": 1905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1885,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1841,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1841,
											"end": 1906,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1841,
											"end": 1906,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1841,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1913,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1913,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1913,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1913,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1913,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1919,
											"end": 2141,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1919,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2012,
											"end": 2016,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2050,
											"end": 2052,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2039,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2053,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2027,
											"end": 2053,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2027,
											"end": 2053,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2063,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2120,
											"end": 2129,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2133,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2063,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2063,
											"end": 2134,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2063,
											"end": 2134,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2063,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 2141,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 2141,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 2141,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 2141,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1919,
											"end": 2141,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2228,
											"end": 2533,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2228,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2268,
											"end": 2271,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2305,
											"end": 2306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2287,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2287,
											"end": 2307,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2287,
											"end": 2307,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2287,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2307,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2282,
											"end": 2307,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2339,
											"end": 2340,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2321,
											"end": 2341,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2321,
											"end": 2341,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2321,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2341,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2476,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2407,
											"end": 2473,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2403,
											"end": 2477,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2400,
											"end": 2401,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2478,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2501,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2394,
											"end": 2501,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2481,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2481,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2481,
											"end": 2499,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2481,
											"end": 2499,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2481,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2394,
											"end": 2501,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2394,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2526,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2523,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2527,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2511,
											"end": 2527,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2511,
											"end": 2527,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2533,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2533,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2533,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2533,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2539,
											"end": 2730,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2539,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2579,
											"end": 2583,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2617,
											"end": 2618,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2599,
											"end": 2619,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2599,
											"end": 2619,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2599,
											"end": 2619,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2599,
											"end": 2619,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2619,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2619,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2651,
											"end": 2652,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2633,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2633,
											"end": 2653,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2633,
											"end": 2653,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2633,
											"end": 2653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2653,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2653,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2673,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2669,
											"end": 2670,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2674,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2663,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2722,
											"end": 2723,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2719,
											"end": 2720,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2724,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2724,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2724,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 2730,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 2730,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 2730,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 2730,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 2730,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2736,
											"end": 2832,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2736,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2773,
											"end": 2780,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2802,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2820,
											"end": 2825,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2802,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2802,
											"end": 2826,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2802,
											"end": 2826,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2802,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2791,
											"end": 2826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2791,
											"end": 2826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 2832,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 2832,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 2832,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 2832,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2838,
											"end": 2928,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2838,
											"end": 2928,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2872,
											"end": 2879,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2915,
											"end": 2920,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2921,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2922,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2890,
											"end": 2922,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2890,
											"end": 2922,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2838,
											"end": 2928,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2838,
											"end": 2928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2838,
											"end": 2928,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2838,
											"end": 2928,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2934,
											"end": 3060,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2934,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 2978,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3053,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3009,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3000,
											"end": 3054,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3054,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2989,
											"end": 3054,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 3060,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 3060,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 3060,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 3060,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3066,
											"end": 3143,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3066,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3103,
											"end": 3110,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3132,
											"end": 3137,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3121,
											"end": 3137,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3121,
											"end": 3137,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3066,
											"end": 3143,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3066,
											"end": 3143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3066,
											"end": 3143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3066,
											"end": 3143,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3149,
											"end": 3329,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3149,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3197,
											"end": 3274,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3194,
											"end": 3195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3187,
											"end": 3275,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3291,
											"end": 3292,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3284,
											"end": 3299,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3318,
											"end": 3322,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3315,
											"end": 3316,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3308,
											"end": 3323,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3458,
											"end": 3575,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3458,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3567,
											"end": 3568,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3565,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3557,
											"end": 3569,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3703,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3581,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3672,
											"end": 3677,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3654,
											"end": 3678,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3654,
											"end": 3678,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3654,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3647,
											"end": 3652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3644,
											"end": 3679,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3634,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3634,
											"end": 3697,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3693,
											"end": 3694,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3690,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3683,
											"end": 3695,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3634,
											"end": 3697,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3634,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3703,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3703,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3709,
											"end": 3831,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3709,
											"end": 3831,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3782,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3800,
											"end": 3805,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3782,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3782,
											"end": 3806,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3782,
											"end": 3806,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3782,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3775,
											"end": 3780,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 3807,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3762,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3762,
											"end": 3825,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3821,
											"end": 3822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3818,
											"end": 3819,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3811,
											"end": 3823,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3762,
											"end": 3825,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3762,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3709,
											"end": 3831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3709,
											"end": 3831,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"sendToken(address,uint256)": "412664ae",
							"tokenBalance(address)": "eedc966a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sendToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Libraries.sol\":\"Libraries\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Libraries.sol\":{\"keccak256\":\"0xcd0c85e073a24c91c94cb46ad19e0733540bb1bf03bcfa585d068b5e00d1347d\",\"urls\":[\"bzz-raw://ad539eb521225b2760b40e75853110f0aa4ef2c896135ac10a73668f64eb0cdb\",\"dweb:/ipfs/QmdKEuexi6GjU1Y2rGRfosefHPDebBhN8S6MKXFFDxHPhc\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x80a62a632fb210251e8a7632c66d8624fd1c2e60b75b3e08c8b04803abec336f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0163070ead773cf28c76b7d88abb8ecf1c0a2cebda62cc44ca91f60faae361d6\",\"dweb:/ipfs/QmfVwE4pVia7L7LMbSkQRUWzmX6f4XpdagrrXh7or2qhyd\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":467:6767  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":467:6767  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c5ab633028b405761a3aaf1f681c200ffa10f48f51e6e0738b3cabf90a7e49b364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c5ab633028b405761a3aaf1f681c200ffa10f48f51e6e0738b3cabf90a7e49b364736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0xAB PUSH4 0x3028B405 PUSH23 0x1A3AAF1F681C200FFA10F48F51E6E0738B3CABF90A7E49 0xB3 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "467:6300:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c5ab633028b405761a3aaf1f681c200ffa10f48f51e6e0738b3cabf90a7e49b364736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 0xAB PUSH4 0x3028B405 PUSH23 0x1A3AAF1F681C200FFA10F48F51E6E0738B3CABF90A7E49 0xB3 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "467:6300:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 467,
									"end": 6767,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c5ab633028b405761a3aaf1f681c200ffa10f48f51e6e0738b3cabf90a7e49b364736f6c63430008070033",
									".code": [
										{
											"begin": 467,
											"end": 6767,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 467,
											"end": 6767,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 467,
											"end": 6767,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 467,
											"end": 6767,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6767,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6767,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 467,
											"end": 6767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6767,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 6767,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x80a62a632fb210251e8a7632c66d8624fd1c2e60b75b3e08c8b04803abec336f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0163070ead773cf28c76b7d88abb8ecf1c0a2cebda62cc44ca91f60faae361d6\",\"dweb:/ipfs/QmfVwE4pVia7L7LMbSkQRUWzmX6f4XpdagrrXh7or2qhyd\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> Libraries.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Libraries.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> Libraries.sol:11:5:\n   |\n11 |     constructor () public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 365,
					"file": "Libraries.sol",
					"start": 268
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Libraries.sol": {
				"ast": {
					"absolutePath": "Libraries.sol",
					"exportedSymbols": {
						"Libraries": [
							58
						],
						"SafeMath": [
							370
						]
					},
					"id": 59,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/contracts/utils/math/SafeMath.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/contracts/utils/math/SafeMath.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 59,
							"sourceUnit": 371,
							"src": "27:98:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 58,
							"linearizedBaseContracts": [
								58
							],
							"name": "Libraries",
							"nameLocation": "139:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "eedc966a",
									"id": 6,
									"mutability": "mutable",
									"name": "tokenBalance",
									"nameLocation": "188:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 58,
									"src": "155:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 5,
										"keyType": {
											"id": 3,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "164:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "155:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 4,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "175:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 8,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "222:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 58,
									"src": "207:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "207:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"id": 11,
									"libraryName": {
										"id": 9,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 370,
										"src": "242:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "236:24:0",
									"typeName": {
										"id": 10,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "255:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "290:75:0",
										"statements": [
											{
												"expression": {
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 14,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "301:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 15,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "309:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "309:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "301:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "301:18:0"
											},
											{
												"expression": {
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 19,
															"name": "tokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "330:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 21,
														"indexExpression": {
															"id": 20,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "343:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "330:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "352:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "330:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "330:23:0"
											}
										]
									},
									"id": 26,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "280:2:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "290:0:0"
									},
									"scope": 58,
									"src": "268:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "442:146:0",
										"statements": [
											{
												"expression": {
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 35,
															"name": "tokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "453:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 38,
														"indexExpression": {
															"expression": {
																"id": 36,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "466:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "466:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "453:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 44,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 30,
																"src": "509:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 39,
																	"name": "tokenBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "480:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 42,
																"indexExpression": {
																	"expression": {
																		"id": 40,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "493:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 41,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "493:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "480:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 249,
															"src": "480:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 45,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "480:37:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "453:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "453:64:0"
											},
											{
												"expression": {
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 48,
															"name": "tokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "528:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 50,
														"indexExpression": {
															"id": 49,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "541:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "528:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 51,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "549:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "528:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "528:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "576:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 34,
												"id": 55,
												"nodeType": "Return",
												"src": "569:11:0"
											}
										]
									},
									"functionSelector": "412664ae",
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendToken",
									"nameLocation": "382:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "401:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "393:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "411:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "406:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "406:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:27:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "436:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 32,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "436:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "435:6:0"
									},
									"scope": 58,
									"src": "373:215:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 59,
							"src": "130:462:0",
							"usedErrors": []
						}
					],
					"src": "0:592:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							370
						]
					},
					"id": 371,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 60,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 61,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 370,
							"linearizedBaseContracts": [
								370
							],
							"name": "SafeMath",
							"nameLocation": "475:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "702:140:1",
										"statements": [
											{
												"id": 91,
												"nodeType": "UncheckedBlock",
												"src": "712:124:1",
												"statements": [
													{
														"assignments": [
															74
														],
														"declarations": [
															{
																"constant": false,
																"id": 74,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 91,
																"src": "736:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 73,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 78,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 75,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 64,
																"src": "748:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 76,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "752:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 79,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "771:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 80,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 64,
																"src": "775:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 86,
														"nodeType": "IfStatement",
														"src": "767:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 82,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 83,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 84,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 72,
															"id": 85,
															"nodeType": "Return",
															"src": "778:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 87,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 74,
																	"src": "823:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 89,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 72,
														"id": 90,
														"nodeType": "Return",
														"src": "809:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "642:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "653:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:1"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "687:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:1"
									},
									"scope": 370,
									"src": "626:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "1063:113:1",
										"statements": [
											{
												"id": 119,
												"nodeType": "UncheckedBlock",
												"src": "1073:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 105,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "1101:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 106,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "1105:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1101:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 112,
														"nodeType": "IfStatement",
														"src": "1097:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1116:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1123:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 110,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1115:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 104,
															"id": 111,
															"nodeType": "Return",
															"src": "1108:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1147:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 114,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "1153:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 115,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "1157:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1153:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 117,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1146:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 104,
														"id": 118,
														"nodeType": "Return",
														"src": "1139:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "848:134:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "996:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1011:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1003:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1003:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1022:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1014:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1014:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:22:1"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1048:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 100,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1048:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1054:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1047:15:1"
									},
									"scope": 370,
									"src": "987:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "1400:417:1",
										"statements": [
											{
												"id": 161,
												"nodeType": "UncheckedBlock",
												"src": "1410:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 133,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "1668:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1673:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1668:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 140,
														"nodeType": "IfStatement",
														"src": "1664:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1684:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1690:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 138,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1683:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 132,
															"id": 139,
															"nodeType": "Return",
															"src": "1676:16:1"
														}
													},
													{
														"assignments": [
															142
														],
														"declarations": [
															{
																"constant": false,
																"id": 142,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1714:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 161,
																"src": "1706:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 141,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1706:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 146,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 143,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "1718:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 126,
																"src": "1722:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1718:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1706:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 147,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 142,
																	"src": "1741:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 148,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1745:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1741:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 150,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 126,
																"src": "1750:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1741:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 156,
														"nodeType": "IfStatement",
														"src": "1737:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1761:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1768:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 154,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1760:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 132,
															"id": 155,
															"nodeType": "Return",
															"src": "1753:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1792:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 158,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 142,
																	"src": "1798:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 159,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1791:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 132,
														"id": 160,
														"nodeType": "Return",
														"src": "1784:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "1182:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1333:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1348:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1340:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1340:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1359:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1351:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1339:22:1"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1385:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 128,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1385:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "1391:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1384:15:1"
									},
									"scope": 370,
									"src": "1324:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "2042:114:1",
										"statements": [
											{
												"id": 189,
												"nodeType": "UncheckedBlock",
												"src": "2052:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 175,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 168,
																"src": "2080:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2085:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2080:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 182,
														"nodeType": "IfStatement",
														"src": "2076:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2096:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2103:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 180,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2095:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 174,
															"id": 181,
															"nodeType": "Return",
															"src": "2088:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2127:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 184,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 166,
																		"src": "2133:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 185,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 168,
																		"src": "2137:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2133:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 187,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2126:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 174,
														"id": 188,
														"nodeType": "Return",
														"src": "2119:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "1823:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1975:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1990:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1982:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2001:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1993:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1993:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1981:22:1"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "2027:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 170,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "2033:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2033:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:15:1"
									},
									"scope": 370,
									"src": "1966:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "2391:114:1",
										"statements": [
											{
												"id": 217,
												"nodeType": "UncheckedBlock",
												"src": "2401:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 203,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 196,
																"src": "2429:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2434:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2429:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 210,
														"nodeType": "IfStatement",
														"src": "2425:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2445:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2452:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 208,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2444:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 202,
															"id": 209,
															"nodeType": "Return",
															"src": "2437:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2476:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 212,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 194,
																		"src": "2482:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 213,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 196,
																		"src": "2486:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2482:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 215,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2475:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 202,
														"id": 216,
														"nodeType": "Return",
														"src": "2468:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "2162:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2324:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2339:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2331:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2350:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2342:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2330:22:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2376:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 198,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2382:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2382:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:15:1"
									},
									"scope": 370,
									"src": "2315:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "2807:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 229,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "2824:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 230,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "2828:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2824:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 228,
												"id": 232,
												"nodeType": "Return",
												"src": "2817:12:1"
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "2511:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2749:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2761:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2753:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2772:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2764:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2764:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2752:22:1"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "2798:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2797:9:1"
									},
									"scope": 370,
									"src": "2740:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "3174:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 244,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "3191:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 245,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "3195:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3191:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 243,
												"id": 247,
												"nodeType": "Return",
												"src": "3184:12:1"
											}
										]
									},
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "2842:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3116:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3128:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3120:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3120:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3139:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3131:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3131:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3119:22:1"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "3165:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:9:1"
									},
									"scope": 370,
									"src": "3107:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "3517:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 259,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "3534:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 260,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "3538:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3534:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 258,
												"id": 262,
												"nodeType": "Return",
												"src": "3527:12:1"
											}
										]
									},
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "3209:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3459:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3471:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "3463:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3463:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3482:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "3474:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3462:22:1"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "3508:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3508:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3507:9:1"
									},
									"scope": 370,
									"src": "3450:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "3902:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 274,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "3919:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 275,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "3923:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3919:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 273,
												"id": 277,
												"nodeType": "Return",
												"src": "3912:12:1"
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "3552:278:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3844:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3856:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "3848:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3867:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "3859:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3859:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:22:1"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "3893:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3892:9:1"
									},
									"scope": 370,
									"src": "3835:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "4451:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 289,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "4468:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 290,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "4472:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4468:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 288,
												"id": 292,
												"nodeType": "Return",
												"src": "4461:12:1"
											}
										]
									},
									"documentation": {
										"id": 280,
										"nodeType": "StructuredDocumentation",
										"src": "3937:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4393:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4405:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "4397:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4397:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4416:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "4408:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4408:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4396:22:1"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "4442:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4442:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4441:9:1"
									},
									"scope": 370,
									"src": "4384:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "5069:106:1",
										"statements": [
											{
												"id": 317,
												"nodeType": "UncheckedBlock",
												"src": "5079:90:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 307,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 299,
																		"src": "5111:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 308,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 297,
																		"src": "5116:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5111:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 310,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "5119:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 306,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5103:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5103:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 312,
														"nodeType": "ExpressionStatement",
														"src": "5103:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 313,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 297,
																"src": "5153:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 314,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "5157:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5153:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 305,
														"id": 316,
														"nodeType": "Return",
														"src": "5146:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "4486:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4953:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4974:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "4966:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4966:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4993:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "4985:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4985:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5018:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "5004:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 300,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4956:80:1"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "5060:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5059:9:1"
									},
									"scope": 370,
									"src": "4944:231:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "5784:105:1",
										"statements": [
											{
												"id": 342,
												"nodeType": "UncheckedBlock",
												"src": "5794:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 332,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 324,
																		"src": "5826:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5830:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5826:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 335,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "5833:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 331,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5818:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5818:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 337,
														"nodeType": "ExpressionStatement",
														"src": "5818:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 338,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 322,
																"src": "5867:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 339,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 324,
																"src": "5871:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5867:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 330,
														"id": 341,
														"nodeType": "Return",
														"src": "5860:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "5181:473:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5668:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5689:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5681:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5681:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5708:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5700:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5700:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5733:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5719:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 325,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5719:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5671:80:1"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5775:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5775:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5774:9:1"
									},
									"scope": 370,
									"src": "5659:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "6660:105:1",
										"statements": [
											{
												"id": 367,
												"nodeType": "UncheckedBlock",
												"src": "6670:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 357,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 349,
																		"src": "6702:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6706:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6702:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 360,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 351,
																	"src": "6709:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 356,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6694:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6694:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 362,
														"nodeType": "ExpressionStatement",
														"src": "6694:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 363,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "6743:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 364,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "6747:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6743:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 355,
														"id": 366,
														"nodeType": "Return",
														"src": "6736:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "5895:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6544:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6565:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "6557:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6557:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6584:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "6576:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6609:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "6595:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 350,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6595:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6547:80:1"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "6651:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6651:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6650:9:1"
									},
									"scope": 370,
									"src": "6535:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 371,
							"src": "467:6300:1",
							"usedErrors": []
						}
					],
					"src": "92:6676:1"
				},
				"id": 1
			}
		}
	}
}